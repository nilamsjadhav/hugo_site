<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Nilam&#39;s blog</title>
    <link>https://nilamsjadhav.github.io/hugo_site/</link>
    <description>Recent content on Nilam&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 14 Oct 2022 23:18:14 +0530</lastBuildDate><atom:link href="https://nilamsjadhav.github.io/hugo_site/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Micro Frontend Architecture</title>
      <link>https://nilamsjadhav.github.io/hugo_site/blog/micro-frontend-architecture/</link>
      <pubDate>Fri, 14 Oct 2022 23:18:14 +0530</pubDate>
      
      <guid>https://nilamsjadhav.github.io/hugo_site/blog/micro-frontend-architecture/</guid>
      <description>hello </description>
    </item>
    
    <item>
      <title>Providing Options in Request (Fetch API)</title>
      <link>https://nilamsjadhav.github.io/hugo_site/blog/providing-options-in-request/</link>
      <pubDate>Thu, 13 Oct 2022 21:46:25 +0530</pubDate>
      
      <guid>https://nilamsjadhav.github.io/hugo_site/blog/providing-options-in-request/</guid>
      <description> fetch() method takes init object as second parameter that allow us to control a number of different settings.
We can specify following options in request.
method headers body mode credentials omit same-origin include cache referrer referrerPolicy integrity keepalive signal For example,
fetch(&amp;#39;https://pokeapi.co/api/v2/pokemon/1&amp;#39;, { method: &amp;#39;GET&amp;#39;, headers: { &amp;#39;Content-Type&amp;#39;: &amp;#39;application/json&amp;#39; }, mode: &amp;#39;no-cors&amp;#39;, cache: &amp;#39;no-cache&amp;#39;, credentials: &amp;#39;same-origin&amp;#39; }) .then(data =&amp;gt; data.json()) .then(pokemons =&amp;gt; console.log(pokemons)); </description>
    </item>
    
    <item>
      <title>Fetch API</title>
      <link>https://nilamsjadhav.github.io/hugo_site/blog/fetch-api/</link>
      <pubDate>Sun, 09 Oct 2022 21:53:46 +0530</pubDate>
      
      <guid>https://nilamsjadhav.github.io/hugo_site/blog/fetch-api/</guid>
      <description>The Fetch API provides a way to fetch resources (including across the network). For making the request and fetching the resources fetch API provides fetch() method.
This method is implemented in multiple interfaces. This makes it available in pretty much any context you might want to fetch resources in.
The fetch() method takes one mandatory argument that is path to the resource want to fetch.
fetch(&amp;#34;https://pokeapi.co/api/v2/pokemon/1&amp;#34;) .then((res) =&amp;gt; res.json()) .</description>
    </item>
    
    <item>
      <title>Using Conditionals in Pug</title>
      <link>https://nilamsjadhav.github.io/hugo_site/blog/using-conditionals-in-pug/</link>
      <pubDate>Thu, 29 Sep 2022 22:54:16 +0530</pubDate>
      
      <guid>https://nilamsjadhav.github.io/hugo_site/blog/using-conditionals-in-pug/</guid>
      <description>Pug provides if and unless conditionals
if - var userExist = true if userExist p.message welcome Output :-
&amp;lt;p class=&amp;#34;message&amp;#34;&amp;gt;welcome &amp;lt;/p&amp;gt; - var userExist = true if userExist p.message welcome else p.message Invalid user Output :-
&amp;lt;p class=&amp;#34;message&amp;#34;&amp;gt;welcome &amp;lt;/p&amp;gt; unless unless works like a negated if. For instance, example using unless and if given below are equivalent.
Using unless - var age = 19 unless age &amp;lt; 18 p.notification Eligible for vote Output :-</description>
    </item>
    
    <item>
      <title>Reactjs</title>
      <link>https://nilamsjadhav.github.io/hugo_site/blog/reactjs/</link>
      <pubDate>Wed, 28 Sep 2022 22:56:37 +0530</pubDate>
      
      <guid>https://nilamsjadhav.github.io/hugo_site/blog/reactjs/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Beck Design Rules</title>
      <link>https://nilamsjadhav.github.io/hugo_site/blog/beck-design-rules/</link>
      <pubDate>Mon, 19 Sep 2022 20:42:11 +0530</pubDate>
      
      <guid>https://nilamsjadhav.github.io/hugo_site/blog/beck-design-rules/</guid>
      <description>Kent Beck created four rules of software design. The rules are in priority order.
Passes the tests
The main aim while developing software is to make it work as expected and tests ensure that whether software is working as expected or not.
Reveals intention
This rule says that code should easy to understand and readable. The way to make it readable and understandable is to reveal your intention in code so that readers will understand what your purpose was when writing it.</description>
    </item>
    
    <item>
      <title>Pug</title>
      <link>https://nilamsjadhav.github.io/hugo_site/blog/pug/</link>
      <pubDate>Tue, 13 Sep 2022 21:08:49 +0530</pubDate>
      
      <guid>https://nilamsjadhav.github.io/hugo_site/blog/pug/</guid>
      <description>Pug is HTML templating engine. Pug compiler convert pug code into HTML code, that browser can understand.
Pug has powerful features like conditions, loops, includes, mixins using which we can render HTML code based on user input or reference data. Pug also support JavaScript natively, hence using JavaScript expressions, we can format HTML code.
Installation Pug can be installed using npm.
npm install pug Overview The rendering process of Pug is pretty straightforward.</description>
    </item>
    
    <item>
      <title>Local Storage</title>
      <link>https://nilamsjadhav.github.io/hugo_site/blog/local-storage/</link>
      <pubDate>Mon, 12 Sep 2022 21:04:51 +0530</pubDate>
      
      <guid>https://nilamsjadhav.github.io/hugo_site/blog/local-storage/</guid>
      <description>Local storage is way of storing data on browser. Local storage is similar to session storage except there is no expiry time for local storage. Local storage is specific to each protocol of the document.
For instance, http://www.demo.com will return different localStorage object than https://www.demo.com</description>
    </item>
    
    <item>
      <title>IME Museum</title>
      <link>https://nilamsjadhav.github.io/hugo_site/blog/ime-museum/</link>
      <pubDate>Sun, 11 Sep 2022 22:25:26 +0530</pubDate>
      
      <guid>https://nilamsjadhav.github.io/hugo_site/blog/ime-museum/</guid>
      <description>There is various type of music genre. It is very hard to gather information of each genre. As there is immense variety in Indian culture. Each religion has their own way of celebrating birth, marriage, harvesting of crops and various rituals.
Indian music experience museum has huge collection of songs and history of each genre of music. IME segregated songs in different categories. Museum has huge collection of old instruments. It also includes some instruments of famous vocalists.</description>
    </item>
    
    <item>
      <title>Session Storage</title>
      <link>https://nilamsjadhav.github.io/hugo_site/blog/session-storage/</link>
      <pubDate>Sat, 10 Sep 2022 20:56:08 +0530</pubDate>
      
      <guid>https://nilamsjadhav.github.io/hugo_site/blog/session-storage/</guid>
      <description>Session storage is way of storing data on browser. Session storage is created when user open new tab or window in browser. It is expiry when tab or browser window is closed. This storage survive on refresh or reload.
Whenever a document is loaded in a particular tab in the browser, a unique page session gets created and assigned to that particular tab. That page session is valid only for that particular tab.</description>
    </item>
    
    <item>
      <title>ASCII and Unicode</title>
      <link>https://nilamsjadhav.github.io/hugo_site/blog/ascii-and-unicode/</link>
      <pubDate>Fri, 09 Sep 2022 21:27:25 +0530</pubDate>
      
      <guid>https://nilamsjadhav.github.io/hugo_site/blog/ascii-and-unicode/</guid>
      <description>ASCII and Unicode are encoding standard. Unicode is the universal character encoding used to process and facilitate the interchange of text data in any language while ASCII is used for the representation of text such as symbols, letters, digits, etc. in computers.
ASCII includes uppercase letter, lowercase letter, digit(0-9) and symbols like punctuation mark. ASCII supports 128 characters. ASCII character uses 7 bit to represent a character.
Unicode includes letters of english, greek, arabic, mathematical symbols and wide range of characters.</description>
    </item>
    
    <item>
      <title>Bindusara</title>
      <link>https://nilamsjadhav.github.io/hugo_site/blog/bindusara/</link>
      <pubDate>Wed, 07 Sep 2022 21:25:46 +0530</pubDate>
      
      <guid>https://nilamsjadhav.github.io/hugo_site/blog/bindusara/</guid>
      <description>Bindusara is the second Mauryan emperor of India. He is son of the great king Chandragupta maurya and father of the king Ashoka. Some sources provided strong evidence about this. But some people claim that he is son of of the king Shushunaga.
Most of Jain legends wrote about Chandragupta maurya and most of Buddhist legends wrote about Ashoka. There is not much documentation available about Bindusara.
Bindusara consolidated Mauryan empire after death of his father.</description>
    </item>
    
    <item>
      <title>Chandragupta Maurya the Great King</title>
      <link>https://nilamsjadhav.github.io/hugo_site/blog/chandragupta-maurya-the-great-king/</link>
      <pubDate>Tue, 06 Sep 2022 20:50:30 +0530</pubDate>
      
      <guid>https://nilamsjadhav.github.io/hugo_site/blog/chandragupta-maurya-the-great-king/</guid>
      <description>Chandragupta maurya is the great king who expanded his kingdom based in Magadha from modern Bengal to Afghanistan. After death of Alexander, his general Seleucus I Nicator start acquiring north-west Indian subcontinent.
Chandragupta maurya defeated him.</description>
    </item>
    
    <item>
      <title>The Journey of Chandragupta maurya from a child to the emperor</title>
      <link>https://nilamsjadhav.github.io/hugo_site/blog/chandragupta-maurya/</link>
      <pubDate>Mon, 05 Sep 2022 20:36:56 +0530</pubDate>
      
      <guid>https://nilamsjadhav.github.io/hugo_site/blog/chandragupta-maurya/</guid>
      <description>Chandragupta maurya was born into a poor family. After death of his father his maternal uncle left him with a cowherd who brought him up as his son. Then that cowherd sold him to a hunter to tend cattle.
One day when chanakya passing through village he saw chandragupta playing. He observed him and he impressed with his act. Chanakya was in search of person who will help him to take revenge from Dhanananda(Ruler of Nanda empire) Chanakya purchased him from cowherd and carried him to Taxila.</description>
    </item>
    
    <item>
      <title>Establishment of Maurya Empire</title>
      <link>https://nilamsjadhav.github.io/hugo_site/blog/establishment-of-maurya-empire/</link>
      <pubDate>Fri, 02 Sep 2022 20:24:27 +0530</pubDate>
      
      <guid>https://nilamsjadhav.github.io/hugo_site/blog/establishment-of-maurya-empire/</guid>
      <description>This is period when The great king Purushottam no more in world. After death of the great king Purushottam, Selecus started acquiring some parts of india. Selecus was a Macedonian Greek general who was an officer and successor of Alexander the Great. At that period there was need of person who can stop this and protect our country. Chanakya was a person who recognized that need.
Chanakya was an ancient Indian polymath who was active as a teacher, author, strategist, philosopher, economist, jurist and royal advisor.</description>
    </item>
    
    <item>
      <title>First Blog</title>
      <link>https://nilamsjadhav.github.io/hugo_site/blog/first-blog/</link>
      <pubDate>Thu, 01 Sep 2022 19:03:40 +0530</pubDate>
      
      <guid>https://nilamsjadhav.github.io/hugo_site/blog/first-blog/</guid>
      <description> This site includes history and technology related blogs. </description>
    </item>
    
  </channel>
</rss>
